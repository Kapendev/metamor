// Copyright 2024 Alexandros F. G. Kapretsos
// SPDX-License-Identifier: MIT

////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// FontAsCode exporter v1.0 - Font data exported as an array of bytes                 //
//                                                                                    //
// more info and bugs-report:  github.com/raysan5/raylib                              //
// feedback and support:       ray[at]raylib.com                                      //
//                                                                                    //
// Copyright (c) 2018-2023 Ramon Santamaria (@raysan5)                                //
//                                                                                    //
// ---------------------------------------------------------------------------------- //
//                                                                                    //
// TODO: Fill the information and license of the exported font here:                  //
//                                                                                    //
// Font name:    Pixeloid                                                             //
// Font creator: GGBotNet (https://ggbot.net/fonts/)                                  //
// Font LICENSE: SIL Open Font License                                                //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

/// The pixeloid module functions as a font that can be loaded from memory.
/// It supports en, de and el characters.

module popka.game.pixeloid;

import ray = popka.vendor.ray.raylib;
import popka.game.engine;

@safe @nogc nothrow:

enum pixeloidFontRunes = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~äöÜßΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσςΤτΥυΦφΧχΨψΩωʹ͵ͺ;΄΅·ΆΈΉΊΌΎΏΐΪΫάέήίΰϊϋόύώϔ";
enum pixeloidFontCompressedDataSize = 1708;

/// Font image pixels data compressed (DEFLATE).
/// NOTE: Original pixel data simplified to GRAYSCALE.
immutable ubyte[pixeloidFontCompressedDataSize] pixeloidFontData = [
    0xed,
    0xdd, 0xc1, 0x72, 0xeb, 0x36, 0x10, 0x44, 0x51, 0xfc, 0xff, 0x4f, 0x77, 0x16, 0xd9, 0xa4, 0x2a, 0x16, 0xc0, 0x69, 0xf4,
    0x80, 0x90, 0x7d, 0x73, 0x36, 0x29, 0x3f, 0x5b, 0xa2, 0x38, 0x24, 0x48, 0x69, 0x5a, 0x80, 0x06, 0x00, 0x00, 0x40, 0x03,
    0x7d, 0xe1, 0xf6, 0xe9, 0x87, 0x9f, 0xe8, 0xc7, 0x9f, 0xfe, 0xad, 0xca, 0x69, 0xb2, 0xbf, 0xf4, 0xe1, 0x31, 0xf4, 0xe1,
    0x2f, 0x54, 0xd8, 0xfb, 0xb3, 0x9f, 0xab, 0xf0, 0x7b, 0xe7, 0xea, 0xaa, 0xe2, 0xbe, 0xf8, 0xfc, 0x9a, 0x55, 0xdc, 0xb3,
    0xb9, 0x23, 0x53, 0xa5, 0x7d, 0xa8, 0xc9, 0xef, 0xab, 0x50, 0x7f, 0x15, 0x2a, 0x5d, 0xf9, 0xcd, 0xda, 0x4f, 0x7b, 0xf6,
    0x9d, 0xbb, 0x6d, 0xf5, 0x47, 0xd3, 0xd1, 0x91, 0xbb, 0x3e, 0x2e, 0xcc, 0x2b, 0xaa, 0xed, 0x2d, 0xd4, 0xd6, 0xe3, 0x76,
    0x5e, 0x53, 0x9c, 0xa3, 0x50, 0x6d, 0x7b, 0xb0, 0xb7, 0xfe, 0xab, 0xb1, 0x2d, 0xf1, 0xbc, 0xf7, 0xdd, 0x75, 0xcc, 0xaf,
    0x3f, 0xf5, 0xfa, 0xcf, 0xae, 0x0d, 0x9f, 0x7e, 0xfb, 0x96, 0xfa, 0xcf, 0xc7, 0x86, 0xfa, 0x7e, 0xba, 0xbf, 0xfe, 0xab,
    0xa3, 0x5a, 0xd1, 0x57, 0x52, 0xb9, 0x1a, 0xf7, 0xbd, 0x62, 0xe7, 0xfa, 0xff, 0xe9, 0x08, 0xae, 0x1c, 0xbf, 0xf7, 0xd5,
    0x7f, 0xbd, 0x45, 0x8a, 0x8c, 0x85, 0x8a, 0x8d, 0xa1, 0xef, 0x8c, 0xff, 0x9a, 0x8e, 0x60, 0xda, 0x3c, 0x02, 0xee, 0x3b,
    0xfb, 0xd7, 0xf7, 0xff, 0x2a, 0x9e, 0xcb, 0xfd, 0xf7, 0xff, 0xdf, 0xf1, 0xfe, 0xff, 0xaf, 0xbd, 0x2b, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0xdf, 0x90, 0x35, 0x22, 0x99, 0xf5, 0x76, 0x07, 0xcf, 0xe9, 0x5a, 0xf8, 0xa9, 0xa5, 0x64,
    0x2f, 0x41, 0xa1, 0x1e, 0xcc, 0xea, 0xb1, 0x9c, 0xe7, 0x19, 0xed, 0x5d, 0x20, 0x95, 0xf6, 0x98, 0xdb, 0xb5, 0xac, 0x66,
    0x93, 0xb4, 0x75, 0x76, 0xaa, 0x9c, 0x90, 0xcb, 0x6c, 0x99, 0xca, 0x89, 0x9e, 0xd5, 0xbf, 0x28, 0xd4, 0xcb, 0xde, 0xa9,
    0x5b, 0xaa, 0x8f, 0x7e, 0xae, 0xfe, 0x89, 0xf3, 0x7f, 0x95, 0x0e, 0xcb, 0xd6, 0x3f, 0xfb, 0x37, 0x9d, 0xf5, 0x5f, 0x8d,
    0x8b, 0xb9, 0x73, 0xf2, 0xe9, 0xf5, 0x7a, 0xaf, 0xb3, 0xef, 0xa5, 0x0e, 0x55, 0x3c, 0x9a, 0x57, 0xa3, 0xef, 0x08, 0x3d,
    0xda, 0xec, 0x79, 0xea, 0xd7, 0x8c, 0xf7, 0x52, 0xab, 0x95, 0x2a, 0xea, 0x78, 0x3a, 0xcf, 0x49, 0x37, 0xdd, 0x71, 0xfe,
    0x2b, 0x34, 0xfe, 0xd7, 0xaf, 0x8b, 0x9d, 0x5b, 0x75, 0x7b, 0x6e, 0xeb, 0x9e, 0xeb, 0xff, 0xfe, 0x9e, 0x76, 0xee, 0x64,
    0x93, 0x8f, 0xf6, 0x7e, 0x3a, 0x57, 0xc1, 0xf1, 0x3f, 0x7d, 0xff, 0x5f, 0xbf, 0x72, 0xdf, 0x7b, 0xa6, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x93, 0xf9, 0xaf, 0x5c, 0xbe, 0x63, 0xfe, 0x28, 0xb3, 0xf9, 0xc0, 0x86, 0x95, 0x41,
    0x1b, 0x87, 0xfe, 0x46, 0xd1, 0xee, 0xe0, 0x88, 0xe6, 0x8a, 0xe6, 0xe9, 0xb1, 0x64, 0x02, 0xc8, 0xeb, 0x61, 0xea, 0x7f,
    0xff, 0xf7, 0x73, 0xc6, 0x46, 0x47, 0x3a, 0xb0, 0x6f, 0xce, 0xd0, 0xa5, 0x87, 0x7b, 0x51, 0xd1, 0x34, 0x5e, 0xb6, 0xfe,
    0xce, 0x2c, 0x36, 0xcf, 0x32, 0x56, 0xef, 0xd7, 0x7f, 0xbc, 0x5c, 0x7f, 0x27, 0x71, 0x36, 0x8c, 0x73, 0xd2, 0xaf, 0xbf,
    0xcc, 0x47, 0x59, 0x1d, 0xf3, 0x32, 0x47, 0xbd, 0xd1, 0xdc, 0xb5, 0xf7, 0xb2, 0x4e, 0xab, 0x63, 0x5d, 0xd6, 0xbc, 0x3f,
    0xda, 0x9e, 0x1f, 0xb3, 0x76, 0xe4, 0xe4, 0xce, 0xff, 0x67, 0xcf, 0x95, 0xbb, 0xdf, 0x90, 0x39, 0x0f, 0xa0, 0x5e, 0xaf,
    0xbf, 0x36, 0x66, 0x84, 0x3a, 0x53, 0xff, 0x9d, 0x0c, 0xd3, 0xfc, 0x7c, 0x4d, 0xde, 0x6f, 0xca, 0xf8, 0x97, 0x64, 0xd6,
    0x71, 0x6f, 0x2e, 0x38, 0x85, 0xf2, 0x8b, 0xfe, 0xfd, 0xbf, 0x3b, 0xb6, 0xfa, 0xf7, 0xbc, 0xc3, 0xfa, 0x96, 0xc3, 0xe7,
    0x3b, 0xce, 0x6a, 0xa2, 0x51, 0x07, 0x46, 0xe4, 0x9e, 0xfa, 0x8b, 0x6f, 0x42, 0xe1, 0xca, 0xc4, 0x25, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x80, 0xdf, 0xfc, 0x69, 0xa3, 0x4a, 0x9f, 0xd0, 0x7b, 0x33, 0x95, 0xe4, 0x3e, 0x01, 0xd5, 0xd1, 0xb5,
    0xc2, 0x56, 0x5b, 0xad, 0x69, 0x8f, 0x50, 0xa1, 0x57, 0xec, 0x7c, 0x93, 0x3f, 0x31, 0xb3, 0x88, 0x42, 0x33, 0x61, 0x0c,
    0x73, 0x06, 0x8b, 0xde, 0xed, 0xd2, 0xf6, 0x6f, 0x6a, 0xb9, 0xed, 0x89, 0xef, 0xfe, 0xcb, 0xea, 0x0d, 0x2b, 0x32, 0x0f,
    0x43, 0x7f, 0xfd, 0x6b, 0xf3, 0xf4, 0x68, 0x33, 0x49, 0xe5, 0xed, 0xe9, 0xb3, 0x29, 0xb1, 0x6a, 0x27, 0xb5, 0x63, 0x76,
    0x89, 0xf9, 0x79, 0x96, 0xef, 0xf7, 0xd6, 0xae, 0x55, 0x99, 0xed, 0x52, 0x31, 0x53, 0xf1, 0x5e, 0xfd, 0xdf, 0x58, 0x4b,
    0x4d, 0xe5, 0xb5, 0x61, 0x57, 0xf3, 0x9d, 0x38, 0xf3, 0x67, 0x25, 0xb6, 0x4b, 0xdb, 0xd9, 0xc9, 0x64, 0xfd, 0xdd, 0x9e,
    0xaf, 0x0e, 0xd7, 0x7f, 0x58, 0xe9, 0x88, 0xdc, 0xdf, 0xe4, 0x46, 0x3d, 0x6d, 0x67, 0x27, 0xef, 0xe8, 0xd0, 0xdf, 0xb1,
    0x6d, 0x32, 0xd6, 0x30, 0xd5, 0x22, 0x99, 0x3a, 0xca, 0x59, 0x9a, 0xd1, 0x54, 0xff, 0x9d, 0x94, 0xee, 0x5f, 0xa9, 0xbf,
    0xb3, 0x82, 0xb5, 0xf7, 0x6e, 0xb2, 0xeb, 0x8e, 0x55, 0xdb, 0xd7, 0x7f, 0xd2, 0x43, 0xdf, 0xff, 0x49, 0x08, 0x7b, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0d, 0x9f, 0xfb, 0xab, 0xdc, 0x0d, 0xad, 0xf6, 0x68, 0x47, 0x78, 0x06, 0x95,
    0x11, 0xed, 0x8d, 0x7b, 0x2b, 0x26, 0xf5, 0x74, 0x1a, 0x9e, 0xd5, 0xeb, 0x44, 0xc7, 0x6d, 0x95, 0x86, 0xd8, 0xed, 0xa9,
    0xde, 0x36, 0x83, 0xce, 0x3c, 0x13, 0xb0, 0xd3, 0xdd, 0x55, 0x39, 0x49, 0xe5, 0x54, 0xd9, 0x3b, 0x7e, 0xdd, 0xf3, 0x25,
    0x91, 0x19, 0xec, 0xa9, 0xff, 0xfc, 0xe7, 0x8a, 0x64, 0x1d, 0xf5, 0x52, 0x8e, 0xc6, 0x59, 0x5d, 0xaa, 0xe7, 0xfc, 0x77,
    0x92, 0x78, 0xb5, 0x1c, 0x4b, 0x7e, 0x06, 0x9d, 0xd4, 0xb8, 0x95, 0xea, 0x96, 0x6b, 0xb2, 0x45, 0x5e, 0x0e, 0x41, 0x07,
    0xaf, 0xff, 0xb5, 0xab, 0x7f, 0x6a, 0xd6, 0xad, 0xd3, 0x33, 0xa8, 0x68, 0xf3, 0x4a, 0xe1, 0xa6, 0x20, 0x9d, 0x71, 0x51,
    0x2d, 0x77, 0x27, 0xba, 0xf0, 0x2e, 0xe8, 0xd4, 0x56, 0xf4, 0xd7, 0xbf, 0x7f, 0x75, 0x41, 0xea, 0x9f, 0xb8, 0x3f, 0xca,
    0x8f, 0xff, 0xf9, 0xf3, 0xff, 0xf6, 0x34, 0xd1, 0xb7, 0xbe, 0x3f, 0xfe, 0x96, 0xeb, 0x3f, 0xb9, 0xa3, 0x53, 0x47, 0xae,
    0x5e, 0x3b, 0xbe, 0x49, 0xe5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x9c, 0xa5, 0xe3, 0xed, 0x19, 0x1f, 0xee,
    0xfc, 0xdc, 0xd4, 0xff, 0xee, 0xba, 0x5a, 0xba, 0x68, 0xcf, 0x3b, 0x82, 0x2a, 0xf7, 0xa7, 0xb4, 0xc8, 0x0c, 0x54, 0x3a,
    0xec, 0x4e, 0x47, 0x45, 0xd3, 0xed, 0xaa, 0x27, 0x16, 0x9e, 0xbf, 0xc6, 0x75, 0x2a, 0x2a, 0xd5, 0xcf, 0x51, 0x61, 0xb6,
    0x81, 0x9d, 0x44, 0x80, 0x9a, 0xd2, 0x59, 0xb5, 0x64, 0x94, 0x02, 0x79, 0x1d, 0xd9, 0xfd, 0xc7, 0xe4, 0x0a, 0xa8, 0xa9,
    0xe4, 0x69, 0x7d, 0xae, 0x20, 0xaf, 0x23, 0xa5, 0xc5, 0x6a, 0x59, 0xbd, 0xf5, 0x77, 0x93, 0x5c, 0x0a, 0xe6, 0xef, 0x74,
    0x24, 0xb3, 0x3a, 0x8c, 0x04, 0xdc, 0xb3, 0xfa, 0xef, 0x64, 0x48, 0xd7, 0x73, 0x24, 0x56, 0xd7, 0x5e, 0x54, 0x74, 0xff,
    0xd7, 0x56, 0xa7, 0x73, 0xd6, 0x77, 0x54, 0x39, 0x0d, 0xec, 0x5c, 0x19, 0xe6, 0xeb, 0x0b, 0x8f, 0x8d, 0xfa, 0x6b, 0xeb,
    0xfa, 0xef, 0x64, 0xdf, 0xb3, 0xe7, 0xbf, 0xbb, 0xbe, 0x6a, 0x66, 0x26, 0x9d, 0x6c, 0xfa, 0x70, 0x1c, 0x99, 0x95, 0x2f,
    0xf9, 0x7d, 0x80, 0xec, 0x8c, 0x6b, 0xf5, 0x99, 0x18, 0xcf, 0x1d, 0x65, 0x99, 0xc4, 0xf6, 0x1d, 0x33, 0xd4, 0xed, 0xe7,
    0xfe, 0xf6, 0x5e, 0x4f, 0x76, 0xfc, 0xaf, 0x8f, 0x4c, 0xd5, 0x77, 0x19, 0xc9, 0xe7, 0xf0, 0x6a, 0xd9, 0x35, 0x73, 0xf5,
    0x5d, 0xb9, 0xbf, 0xdf, 0x96, 0x4c, 0x22, 0x69, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa9, 0x6e, 0xc7, 0x7d,
    0x39, 0x30, 0xd9, 0x2b, 0x4f, 0x8e, 0x50, 0x4f, 0xa5, 0x7b, 0x8b, 0x65, 0x7f, 0xf7, 0x5d, 0x46, 0x77, 0x30, 0x9b, 0x91,
    0x51, 0x34, 0x6f, 0x55, 0xed, 0x6a, 0xcd, 0x9f, 0xa7, 0x9a, 0x2a, 0xcb, 0x6d, 0x71, 0x75, 0x05, 0x48, 0x6f, 0x96, 0x13,
    0x6f, 0x8e, 0x82, 0xd1, 0xbe, 0x72, 0x61, 0x47, 0x12, 0x47, 0xad, 0x1d, 0x6a, 0x95, 0x52, 0x40, 0xfb, 0x89, 0xa7, 0xa7,
    0x09, 0x02, 0x67, 0x06, 0x2e, 0xaf, 0xfe, 0xc9, 0x39, 0xef, 0xee, 0xad, 0xff, 0x2a, 0x6b, 0x7b, 0x57, 0xfd, 0xd7, 0x63,
    0x9b, 0x3b, 0x2a, 0x26, 0xd2, 0xbe, 0x5e, 0x46, 0x43, 0x46, 0x5f, 0xdf, 0x19, 0xff, 0x65, 0xe4, 0xca, 0xea, 0x77, 0x12,
    0xfb, 0xf5, 0xaf, 0xbf, 0x6e, 0x95, 0x33, 0x6a, 0x4f, 0xeb, 0x9f, 0xce, 0x6e, 0xe9, 0x50, 0x0e, 0xaa, 0xe7, 0xbc, 0xdc,
    0x4d, 0x3c, 0x9f, 0x48, 0x59, 0xb9, 0xf7, 0xf8, 0x7f, 0xb5, 0xfe, 0x0a, 0xa7, 0x50, 0xbe, 0xb3, 0xfe, 0x5e, 0xda, 0xac,
    0x92, 0x71, 0x97, 0xbd, 0x1e, 0xa8, 0x5a, 0xd3, 0x41, 0xe9, 0x79, 0xa6, 0xc9, 0x27, 0xb1, 0x0f, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xe0, 0x4c, 0x8e, 0xcb, 0xcf, 0x3f, 0x79, 0x9f, 0xbf, 0xcb, 0xea, 0x42, 0xa8, 0x34, 0x6f, 0xc3, 0xee,
    0x4f, 0x46, 0x6c, 0xc5, 0x90, 0x93, 0x55, 0x96, 0xdd, 0xcb, 0xd2, 0xb2, 0x77, 0xec, 0xae, 0xf8, 0xf6, 0xbc, 0xfe, 0xb2,
    0xb3, 0x21, 0xf5, 0xda, 0x3e, 0xf9, 0xab, 0xdd, 0xd9, 0xb8, 0xfe, 0xdb, 0x07, 0xab, 0x25, 0xeb, 0x3a, 0xea, 0xbf, 0xce,
    0x9e, 0xc9, 0x38, 0xa6, 0x9c, 0x47, 0x93, 0x39, 0x2b, 0xda, 0xdd, 0xeb, 0x24, 0xa9, 0x9c, 0x03, 0x39, 0x59, 0xff, 0x27,
    0x6b, 0xb0, 0xca, 0x98, 0x95, 0xca, 0x59, 0x41, 0xd5, 0xcd, 0x20, 0xde, 0xdb, 0x35, 0x94, 0x75, 0xb5, 0xd0, 0x66, 0x4f,
    0xba, 0x9e, 0xbb, 0xd2, 0xc6, 0xd5, 0xc1, 0x19, 0xf9, 0x9c, 0x8c, 0x72, 0x2a, 0x67, 0x78, 0xae, 0xfb, 0xfc, 0x64, 0xd4,
    0xcd, 0xa5, 0xd4, 0x77, 0xc6, 0x8c, 0xec, 0x1a, 0xbc, 0x32, 0xef, 0x93, 0xf4, 0xea, 0xb7, 0x09, 0x3a, 0xea, 0xaf, 0x72,
    0xde, 0x71, 0xf7, 0x15, 0x2b, 0xba, 0x95, 0x1d, 0xef, 0x29, 0x14, 0x1c, 0x45, 0xbf, 0xf7, 0x5d, 0xd7, 0x3d, 0xf5, 0x1f,
    0xf1, 0x39, 0xdd, 0xd2, 0x23, 0xd4, 0xb7, 0xae, 0x87, 0xe8, 0xde, 0x75, 0xdf, 0xbe, 0xfe, 0x27, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xe0, 0x2f, 0x7e, 0x5b, 0x57, 0x46, 0xaf, 0x36, 0xf5, 0xed, 0xfb, 0xee, 0x64, 0x96, 0x5e, 0xf9, 0x5e,
    0xff, 0xee, 0x37, 0xd2, 0xb5, 0x98, 0x5d, 0x6b, 0x9e, 0xaf, 0x50, 0x31, 0xc9, 0x75, 0x66, 0xbf, 0x6a, 0x3b, 0xaf, 0x75,
    0xe6, 0x38, 0x1d, 0x0d, 0x3d, 0xfe, 0x7a, 0x1a, 0xd2, 0x9d, 0xc7, 0xcd, 0x5f, 0x51, 0x88, 0x9e, 0x56, 0x67, 0x22, 0x77,
    0x04, 0x33, 0x14, 0xee, 0xbf, 0xa5, 0xd6, 0x5a, 0x5c, 0xe5, 0xe4, 0x3e, 0x8f, 0x4b, 0x95, 0xdc, 0xaf, 0x42, 0xdb, 0x99,
    0x9b, 0x6f, 0xea, 0x96, 0xfa, 0x3f, 0x59, 0xb7, 0xb0, 0xb3, 0xfe, 0xeb, 0xb5, 0x49, 0x3f, 0x8d, 0x4b, 0x3a, 0x5a, 0xff,
    0x73, 0xab, 0x85, 0x9e, 0xae, 0xbf, 0x3b, 0xfb, 0x92, 0xb3, 0xda, 0xa6, 0x33, 0x32, 0x24, 0x72, 0xdf, 0xef, 0xd5, 0x5f,
    0x5f, 0x5c, 0x7f, 0xef, 0x6e, 0xc8, 0xb9, 0x67, 0x53, 0x79, 0x86, 0x4d, 0xea, 0x9f, 0xc8, 0xff, 0x3e, 0x19, 0x69, 0x33,
    0xab, 0xed, 0xae, 0x9f, 0x65, 0xff, 0x5e, 0x72, 0x7f, 0x55, 0xde, 0x61, 0xae, 0x3b, 0xac, 0xf2, 0xbb, 0xe1, 0xfc, 0xfd,
    0xff, 0x3d, 0xdf, 0x7a, 0xd0, 0xd1, 0x7c, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0xf5, 0xef, 0x7f, 0xec, 0x07,
    0xea, 0x8f, 0x3f, 0x5b, 0xff, 0x7f, 0x00
];

/// Font characters rectangles data.
immutable ray.Rectangle[176] pixeloidFontRects = [
    ray.Rectangle( 4, 4, 3 , 11 ),
    ray.Rectangle( 15, 4, 1 , 8 ),
    ray.Rectangle( 24, 4, 3 , 3 ),
    ray.Rectangle( 35, 4, 5 , 8 ),
    ray.Rectangle( 48, 4, 5 , 9 ),
    ray.Rectangle( 61, 4, 5 , 8 ),
    ray.Rectangle( 74, 4, 5 , 8 ),
    ray.Rectangle( 87, 4, 1 , 3 ),
    ray.Rectangle( 96, 4, 3 , 9 ),
    ray.Rectangle( 107, 4, 3 , 9 ),
    ray.Rectangle( 118, 4, 3 , 4 ),
    ray.Rectangle( 129, 4, 3 , 3 ),
    ray.Rectangle( 140, 4, 1 , 2 ),
    ray.Rectangle( 149, 4, 3 , 1 ),
    ray.Rectangle( 160, 4, 1 , 1 ),
    ray.Rectangle( 169, 4, 5 , 8 ),
    ray.Rectangle( 182, 4, 5 , 8 ),
    ray.Rectangle( 195, 4, 5 , 8 ),
    ray.Rectangle( 208, 4, 5 , 8 ),
    ray.Rectangle( 221, 4, 5 , 8 ),
    ray.Rectangle( 234, 4, 5 , 8 ),
    ray.Rectangle( 4, 23, 5 , 8 ),
    ray.Rectangle( 17, 23, 5 , 8 ),
    ray.Rectangle( 30, 23, 5 , 8 ),
    ray.Rectangle( 43, 23, 5 , 8 ),
    ray.Rectangle( 56, 23, 5 , 8 ),
    ray.Rectangle( 69, 23, 1 , 5 ),
    ray.Rectangle( 78, 23, 1 , 6 ),
    ray.Rectangle( 87, 23, 3 , 5 ),
    ray.Rectangle( 98, 23, 3 , 3 ),
    ray.Rectangle( 109, 23, 3 , 5 ),
    ray.Rectangle( 120, 23, 5 , 8 ),
    ray.Rectangle( 133, 23, 5 , 8 ),
    ray.Rectangle( 146, 23, 5 , 8 ),
    ray.Rectangle( 159, 23, 5 , 8 ),
    ray.Rectangle( 172, 23, 5 , 8 ),
    ray.Rectangle( 185, 23, 5 , 8 ),
    ray.Rectangle( 198, 23, 5 , 8 ),
    ray.Rectangle( 211, 23, 5 , 8 ),
    ray.Rectangle( 224, 23, 5 , 8 ),
    ray.Rectangle( 237, 23, 5 , 8 ),
    ray.Rectangle( 4, 42, 3 , 8 ),
    ray.Rectangle( 15, 42, 4 , 8 ),
    ray.Rectangle( 27, 42, 5 , 8 ),
    ray.Rectangle( 40, 42, 5 , 8 ),
    ray.Rectangle( 53, 42, 8 , 8 ),
    ray.Rectangle( 69, 42, 6 , 8 ),
    ray.Rectangle( 83, 42, 5 , 8 ),
    ray.Rectangle( 96, 42, 5 , 8 ),
    ray.Rectangle( 109, 42, 5 , 8 ),
    ray.Rectangle( 122, 42, 5 , 8 ),
    ray.Rectangle( 135, 42, 5 , 8 ),
    ray.Rectangle( 148, 42, 5 , 8 ),
    ray.Rectangle( 161, 42, 5 , 8 ),
    ray.Rectangle( 174, 42, 5 , 8 ),
    ray.Rectangle( 187, 42, 8 , 8 ),
    ray.Rectangle( 203, 42, 5 , 8 ),
    ray.Rectangle( 216, 42, 5 , 8 ),
    ray.Rectangle( 229, 42, 5 , 8 ),
    ray.Rectangle( 242, 42, 3 , 9 ),
    ray.Rectangle( 4, 61, 5 , 8 ),
    ray.Rectangle( 17, 61, 3 , 9 ),
    ray.Rectangle( 28, 61, 5 , 4 ),
    ray.Rectangle( 41, 61, 3 , 1 ),
    ray.Rectangle( 52, 61, 2 , 2 ),
    ray.Rectangle( 62, 61, 5 , 5 ),
    ray.Rectangle( 75, 61, 5 , 8 ),
    ray.Rectangle( 88, 61, 5 , 5 ),
    ray.Rectangle( 101, 61, 5 , 8 ),
    ray.Rectangle( 114, 61, 5 , 5 ),
    ray.Rectangle( 127, 61, 3 , 8 ),
    ray.Rectangle( 138, 61, 5 , 7 ),
    ray.Rectangle( 151, 61, 5 , 8 ),
    ray.Rectangle( 164, 61, 1 , 8 ),
    ray.Rectangle( 173, 61, 4 , 9 ),
    ray.Rectangle( 185, 61, 4 , 8 ),
    ray.Rectangle( 197, 61, 1 , 8 ),
    ray.Rectangle( 206, 61, 8 , 5 ),
    ray.Rectangle( 222, 61, 5 , 5 ),
    ray.Rectangle( 235, 61, 5 , 5 ),
    ray.Rectangle( 4, 80, 5 , 7 ),
    ray.Rectangle( 17, 80, 5 , 7 ),
    ray.Rectangle( 30, 80, 4 , 5 ),
    ray.Rectangle( 42, 80, 5 , 5 ),
    ray.Rectangle( 55, 80, 3 , 8 ),
    ray.Rectangle( 66, 80, 5 , 5 ),
    ray.Rectangle( 79, 80, 5 , 5 ),
    ray.Rectangle( 92, 80, 8 , 5 ),
    ray.Rectangle( 108, 80, 5 , 5 ),
    ray.Rectangle( 121, 80, 5 , 7 ),
    ray.Rectangle( 134, 80, 5 , 5 ),
    ray.Rectangle( 147, 80, 4 , 9 ),
    ray.Rectangle( 159, 80, 1 , 9 ),
    ray.Rectangle( 168, 80, 4 , 9 ),
    ray.Rectangle( 180, 80, 5 , 3 ),
    ray.Rectangle( 193, 80, 5 , 8 ),
    ray.Rectangle( 206, 80, 5 , 8 ),
    ray.Rectangle( 219, 80, 5 , 9 ),
    ray.Rectangle( 232, 80, 5 , 8 ),
    ray.Rectangle( 4, 99, 5 , 8 ),
    ray.Rectangle( 17, 99, 5 , 5 ),
    ray.Rectangle( 30, 99, 5 , 8 ),
    ray.Rectangle( 43, 99, 4 , 9 ),
    ray.Rectangle( 55, 99, 5 , 8 ),
    ray.Rectangle( 68, 99, 5 , 6 ),
    ray.Rectangle( 81, 99, 5 , 8 ),
    ray.Rectangle( 94, 99, 4 , 8 ),
    ray.Rectangle( 106, 99, 5 , 8 ),
    ray.Rectangle( 119, 99, 4 , 5 ),
    ray.Rectangle( 131, 99, 5 , 8 ),
    ray.Rectangle( 144, 99, 4 , 9 ),
    ray.Rectangle( 156, 99, 5 , 8 ),
    ray.Rectangle( 169, 99, 5 , 6 ),
    ray.Rectangle( 182, 99, 5 , 8 ),
    ray.Rectangle( 195, 99, 5 , 5 ),
    ray.Rectangle( 208, 99, 3 , 8 ),
    ray.Rectangle( 219, 99, 1 , 5 ),
    ray.Rectangle( 228, 99, 5 , 8 ),
    ray.Rectangle( 241, 99, 4 , 5 ),
    ray.Rectangle( 4, 118, 5 , 8 ),
    ray.Rectangle( 17, 118, 4 , 8 ),
    ray.Rectangle( 29, 118, 8 , 8 ),
    ray.Rectangle( 45, 118, 5 , 6 ),
    ray.Rectangle( 58, 118, 6 , 8 ),
    ray.Rectangle( 72, 118, 5 , 5 ),
    ray.Rectangle( 85, 118, 5 , 8 ),
    ray.Rectangle( 98, 118, 4 , 9 ),
    ray.Rectangle( 110, 118, 5 , 8 ),
    ray.Rectangle( 123, 118, 5 , 5 ),
    ray.Rectangle( 136, 118, 5 , 8 ),
    ray.Rectangle( 149, 118, 5 , 5 ),
    ray.Rectangle( 162, 118, 5 , 8 ),
    ray.Rectangle( 175, 118, 4 , 7 ),
    ray.Rectangle( 187, 118, 4 , 8 ),
    ray.Rectangle( 199, 118, 5 , 5 ),
    ray.Rectangle( 212, 118, 5 , 7 ),
    ray.Rectangle( 225, 118, 5 , 8 ),
    ray.Rectangle( 238, 118, 5 , 5 ),
    ray.Rectangle( 4, 137, 5 , 8 ),
    ray.Rectangle( 17, 137, 5 , 5 ),
    ray.Rectangle( 30, 137, 8 , 8 ),
    ray.Rectangle( 46, 137, 5 , 6 ),
    ray.Rectangle( 59, 137, 5 , 8 ),
    ray.Rectangle( 72, 137, 5 , 6 ),
    ray.Rectangle( 85, 137, 5 , 8 ),
    ray.Rectangle( 98, 137, 5 , 6 ),
    ray.Rectangle( 111, 137, 5 , 8 ),
    ray.Rectangle( 124, 137, 5 , 5 ),
    ray.Rectangle( 137, 137, 1 , 2 ),
    ray.Rectangle( 146, 137, 1 , 2 ),
    ray.Rectangle( 155, 137, 1 , 2 ),
    ray.Rectangle( 164, 137, 1 , 6 ),
    ray.Rectangle( 173, 137, 1 , 2 ),
    ray.Rectangle( 182, 137, 5 , 2 ),
    ray.Rectangle( 195, 137, 1 , 1 ),
    ray.Rectangle( 204, 137, 5 , 8 ),
    ray.Rectangle( 217, 137, 6 , 8 ),
    ray.Rectangle( 231, 137, 6 , 8 ),
    ray.Rectangle( 4, 156, 4 , 8 ),
    ray.Rectangle( 16, 156, 6 , 8 ),
    ray.Rectangle( 30, 156, 6 , 8 ),
    ray.Rectangle( 44, 156, 6 , 8 ),
    ray.Rectangle( 58, 156, 5 , 8 ),
    ray.Rectangle( 71, 156, 3 , 9 ),
    ray.Rectangle( 82, 156, 5 , 9 ),
    ray.Rectangle( 95, 156, 5 , 8 ),
    ray.Rectangle( 108, 156, 4 , 8 ),
    ray.Rectangle( 120, 156, 5 , 9 ),
    ray.Rectangle( 133, 156, 1 , 8 ),
    ray.Rectangle( 142, 156, 5 , 8 ),
    ray.Rectangle( 155, 156, 3 , 8 ),
    ray.Rectangle( 166, 156, 5 , 8 ),
    ray.Rectangle( 179, 156, 5 , 8 ),
    ray.Rectangle( 192, 156, 5 , 8 ),
    ray.Rectangle( 205, 156, 5 , 8 ),
    ray.Rectangle( 218, 156, 5 , 8 ),
];

/// Font glyphs info data.
/// NOTE: No glyphs.image data provided.
immutable ray.GlyphInfo[176] pixeloidFontGlyphs = [
    ray.GlyphInfo( 32, 0, 9, 3, ray.Image() ),
    ray.GlyphInfo( 33, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 34, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 35, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 36, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 37, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 38, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 39, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 40, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 41, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 42, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 43, 0, 4, 4, ray.Image() ),
    ray.GlyphInfo( 44, 0, 8, 2, ray.Image() ),
    ray.GlyphInfo( 45, 0, 5, 4, ray.Image() ),
    ray.GlyphInfo( 46, 0, 8, 2, ray.Image() ),
    ray.GlyphInfo( 47, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 48, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 49, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 50, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 51, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 52, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 53, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 54, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 55, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 56, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 57, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 58, 0, 4, 2, ray.Image() ),
    ray.GlyphInfo( 59, 0, 4, 2, ray.Image() ),
    ray.GlyphInfo( 60, 0, 3, 4, ray.Image() ),
    ray.GlyphInfo( 61, 0, 4, 4, ray.Image() ),
    ray.GlyphInfo( 62, 0, 3, 4, ray.Image() ),
    ray.GlyphInfo( 63, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 64, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 65, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 66, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 67, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 68, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 69, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 70, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 71, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 72, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 73, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 74, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 75, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 76, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 77, 0, 1, 8, ray.Image() ),
    ray.GlyphInfo( 78, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 79, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 80, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 81, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 82, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 83, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 84, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 85, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 86, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 87, 0, 1, 8, ray.Image() ),
    ray.GlyphInfo( 88, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 89, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 90, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 91, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 92, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 93, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 94, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 95, 0, 9, 4, ray.Image() ),
    ray.GlyphInfo( 96, 1, 0, 6, ray.Image() ),
    ray.GlyphInfo( 97, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 98, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 99, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 100, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 101, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 102, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 103, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 104, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 105, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 106, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 107, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 108, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 109, 0, 4, 8, ray.Image() ),
    ray.GlyphInfo( 110, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 111, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 112, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 113, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 114, 0, 4, 5, ray.Image() ),
    ray.GlyphInfo( 115, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 116, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 117, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 118, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 119, 0, 4, 8, ray.Image() ),
    ray.GlyphInfo( 120, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 121, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 122, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 123, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 124, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 125, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 126, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 228, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 246, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 220, 0, 0, 6, ray.Image() ),
    ray.GlyphInfo( 223, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 913, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 945, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 914, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 946, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 915, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 947, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 916, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 948, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 917, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 949, 0, 4, 5, ray.Image() ),
    ray.GlyphInfo( 918, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 950, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 919, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 951, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 920, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 952, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 921, 0, 1, 4, ray.Image() ),
    ray.GlyphInfo( 953, 0, 4, 2, ray.Image() ),
    ray.GlyphInfo( 922, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 954, 0, 4, 5, ray.Image() ),
    ray.GlyphInfo( 923, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 955, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 924, 0, 1, 8, ray.Image() ),
    ray.GlyphInfo( 956, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 925, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 957, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 926, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 958, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 927, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 959, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 928, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 960, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 929, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 961, 0, 4, 5, ray.Image() ),
    ray.GlyphInfo( 931, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 963, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 962, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 932, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 964, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 933, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 965, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 934, 0, 1, 8, ray.Image() ),
    ray.GlyphInfo( 966, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 935, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 967, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 936, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 968, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 937, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 969, 0, 4, 6, ray.Image() ),
    ray.GlyphInfo( 884, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 885, 0, 8, 2, ray.Image() ),
    ray.GlyphInfo( 890, 0, 7, 2, ray.Image() ),
    ray.GlyphInfo( 894, 0, 4, 2, ray.Image() ),
    ray.GlyphInfo( 900, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 901, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 903, 0, 4, 2, ray.Image() ),
    ray.GlyphInfo( 902, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 904, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 905, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 906, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 908, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 910, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 911, 0, 1, 7, ray.Image() ),
    ray.GlyphInfo( 912, -2, 1, 2, ray.Image() ),
    ray.GlyphInfo( 938, 0, 0, 4, ray.Image() ),
    ray.GlyphInfo( 939, 0, 0, 6, ray.Image() ),
    ray.GlyphInfo( 940, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 941, 0, 1, 5, ray.Image() ),
    ray.GlyphInfo( 942, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 943, 0, 1, 2, ray.Image() ),
    ray.GlyphInfo( 944, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 970, -1, 1, 2, ray.Image() ),
    ray.GlyphInfo( 971, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 972, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 973, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 974, 0, 1, 6, ray.Image() ),
    ray.GlyphInfo( 980, 0, 1, 6, ray.Image() ),
];

/// Font loading function.
/// WARNING: This font data must not be unloaded.
@trusted
Font loadPixeloidFont() {
    Font result;
    ray.Font font = ray.Font();
    font.baseSize = 11;
    font.glyphCount = 176;
    font.glyphPadding = 4;
    // Custom font loading.
    // NOTE: Compressed font image data (DEFLATE), it requires DecompressData() function.
    int pixeloidFontDataSize = 0;
    ubyte* data = ray.DecompressData(cast(ubyte*) &pixeloidFontData, pixeloidFontCompressedDataSize, &pixeloidFontDataSize);
    ray.Image image = ray.Image( data, 256, 256, 1, 2 );
    // Load texture from image.
    font.texture = ray.LoadTextureFromImage(image);
    ray.UnloadImage(image); // Uncompressed data can be unloaded from memory.
    // Assign glyph recs and info data directly.
    // WARNING: This font data must not be unloaded.
    font.recs = cast(ray.Rectangle*) &pixeloidFontRects;
    font.glyphs = cast(ray.GlyphInfo*) &pixeloidFontGlyphs;
    result = toPopka(font);
    result.spacing = Vec2(1.0f, 14.0f);
    return result;
}
